/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Settings as PrismaSettings,
  Users as PrismaUsers,
} from "@prisma/client";

export class SettingsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SettingsCountArgs, "select">): Promise<number> {
    return this.prisma.settings.count(args);
  }

  async settingsItems<T extends Prisma.SettingsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SettingsFindManyArgs>
  ): Promise<PrismaSettings[]> {
    return this.prisma.settings.findMany<Prisma.SettingsFindManyArgs>(args);
  }
  async settings<T extends Prisma.SettingsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SettingsFindUniqueArgs>
  ): Promise<PrismaSettings | null> {
    return this.prisma.settings.findUnique(args);
  }
  async createSettings<T extends Prisma.SettingsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SettingsCreateArgs>
  ): Promise<PrismaSettings> {
    return this.prisma.settings.create<T>(args);
  }
  async updateSettings<T extends Prisma.SettingsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SettingsUpdateArgs>
  ): Promise<PrismaSettings> {
    return this.prisma.settings.update<T>(args);
  }
  async deleteSettings<T extends Prisma.SettingsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SettingsDeleteArgs>
  ): Promise<PrismaSettings> {
    return this.prisma.settings.delete(args);
  }

  async findUsersItems(
    parentId: string,
    args: Prisma.UsersFindManyArgs
  ): Promise<PrismaUsers[]> {
    return this.prisma.settings
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .usersItems(args);
  }
}
